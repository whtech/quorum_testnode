a = eth.accounts[0]
web3.eth.defaultAccount = a;

// abi and bytecode generated from simplestorage.sol:
// > solcjs --bin --abi simplestorage.sol
var abi = [    {      "constant": true,      "inputs": [],      "name": "name",      "outputs": [        {          "name": "",          "type": "string"        }      ],      "payable": false,      "stateMutability": "view",      "type": "function"    },    {      "constant": false,      "inputs": [        {          "name": "spender",          "type": "address"        },        {          "name": "value",          "type": "uint256"        }      ],      "name": "approve",      "outputs": [        {          "name": "",          "type": "bool"        }      ],      "payable": false,      "stateMutability": "nonpayable",      "type": "function"    },    {      "constant": true,      "inputs": [],      "name": "totalSupply",      "outputs": [        {          "name": "",          "type": "uint256"        }      ],      "payable": false,      "stateMutability": "view",      "type": "function"    },    {      "constant": false,      "inputs": [        {          "name": "from",          "type": "address"        },        {          "name": "to",          "type": "address"        },        {          "name": "value",          "type": "uint256"        }      ],      "name": "transferFrom",      "outputs": [        {          "name": "",          "type": "bool"        }      ],      "payable": false,      "stateMutability": "nonpayable",      "type": "function"    },    {      "constant": true,      "inputs": [],      "name": "decimals",      "outputs": [        {          "name": "",          "type": "uint8"        }      ],      "payable": false,      "stateMutability": "view",      "type": "function"    },    {      "constant": false,      "inputs": [        {          "name": "spender",          "type": "address"        },        {          "name": "addedValue",          "type": "uint256"        }      ],      "name": "increaseAllowance",      "outputs": [        {          "name": "",          "type": "bool"        }      ],      "payable": false,      "stateMutability": "nonpayable",      "type": "function"    },    {      "constant": true,      "inputs": [        {          "name": "owner",          "type": "address"        }      ],      "name": "balanceOf",      "outputs": [        {          "name": "",          "type": "uint256"        }      ],      "payable": false,      "stateMutability": "view",      "type": "function"    },    {      "constant": true,      "inputs": [],      "name": "symbol",      "outputs": [        {          "name": "",          "type": "string"        }      ],      "payable": false,      "stateMutability": "view",      "type": "function"    },    {      "constant": false,      "inputs": [        {          "name": "spender",          "type": "address"        },        {          "name": "subtractedValue",          "type": "uint256"        }      ],      "name": "decreaseAllowance",      "outputs": [        {          "name": "",          "type": "bool"        }      ],      "payable": false,      "stateMutability": "nonpayable",      "type": "function"    },    {      "constant": false,      "inputs": [        {          "name": "to",          "type": "address"        },        {          "name": "value",          "type": "uint256"        }      ],      "name": "transfer",      "outputs": [        {          "name": "",          "type": "bool"        }      ],      "payable": false,      "stateMutability": "nonpayable",      "type": "function"    },    {      "constant": true,      "inputs": [        {          "name": "owner",          "type": "address"        },        {          "name": "spender",          "type": "address"        }      ],      "name": "allowance",      "outputs": [        {          "name": "",          "type": "uint256"        }      ],      "payable": false,      "stateMutability": "view",      "type": "function"    },    {      "inputs": [],      "payable": false,      "stateMutability": "nonpayable",      "type": "constructor"    },    {      "anonymous": false,      "inputs": [        {          "indexed": true,          "name": "from",          "type": "address"        },        {          "indexed": true,          "name": "to",          "type": "address"        },        {          "indexed": false,          "name": "value",          "type": "uint256"        }      ],      "name": "Transfer",      "type": "event"    },    {      "anonymous": false,      "inputs": [        {          "indexed": true,          "name": "owner",          "type": "address"        },        {          "indexed": true,          "name": "spender",          "type": "address"        },        {          "indexed": false,          "name": "value",          "type": "uint256"        }      ],      "name": "Approval",      "type": "event"    }  ]

var bytecode = "";


var simpleContract = web3.eth.contract(abi);
var simple = simpleContract.new({from:web3.eth.accounts[0], data: bytecode, gas: 0x47b760 }, function(e, contract) {
	if (e) {
		console.log("err creating contract", e);
	} else {
		if (!contract.address) {
			console.log("Contract transaction send: TransactionHash: " + contract.transactionHash + " waiting to be mined...");
		} else {
			console.log("Contract mined! Address: " + contract.address);
			console.log(contract);
		}
	}
});

